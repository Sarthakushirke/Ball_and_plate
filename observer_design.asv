clear all; close all;
% g = 9.81;
% Ac = [0 1 0 0;0 0 0 0; 0 0 0 1;0 0 0 0];
% Bc = (-5/7)*g*[0 0 ;1 0;0 0; 0 1];
% Cc = [1 0 0 0; 0 0 1 0];
% Dc = [0 0 ;0 0 ];
% x0 = [0;0;0;0]; % Initial point
% 
% Ts = 0.1;
% ss_c = ss(Ac,Bc,Cc,Dc); % state space definition 
% ss_d = c2d(ss_c,Ts,'zoh'); % discritization using matlab function 
% ss_d_ccf = canon(ss_d);
% 
% % Convert to controllable canonical form 
% A = ss_d_ccf.A.';
% B = ss_d_ccf.C.';
% C = ss_d_ccf.B.';
% D = ss_d_ccf.D;
% 
% [nx,nu] = size(B);
% 
% obsv_M = obsv(A,C);
% ctrb_M = ctrb(A,B);
% 
% %% Split system in 2 parts
% 
% A1 = A(1:2,1:2);
% B1 = B(1:2,1);
% C1 = C(1,1:2);
% D1 = 0;
% test_ss = ss(A1,B1,C1,D1);
% 
% %% LQR controler
% poles = [-0.5 , -0.5];
% K = -acker(A1,B1,poles);
% %% 
% L1 = acker(A1',C1',[-0.5;-0.5])';
% Aobs = A1-L1*C1;
% Bobs = [B1 L1];
% Cobs = eye(2);
% Dobs = zeros(2,2);

%% Example

% g = 9.81;
% Ac = [0 1 0 0;0 0 0 0; 0 0 0 1;0 0 0 0];
% Bc = (-5/7)*g*[0 0 ;1 0;0 0; 0 1];
% Cc = [1 0 0 0; 0 0 1 0];
% Dc = [0 0 ;0 0 ];
% x0 = [0;0;0;0]; % Initial point
% 
% Ts = 0.1;
% ss_c = ss(Ac,Bc,Cc,Dc); % state space definition 
% ss_d = c2d(ss_c,Ts,'zoh'); % discritization using matlab function 
% ss_d_ccf = canon(ss_d);
% 
% % Convert to controllable canonical form 
% A = ss_d_ccf.A.';
% B = ss_d_ccf.C.';
% C = ss_d_ccf.B.';
% D = ss_d_ccf.D;
% 
% [nx,nu] = size(B);
% 
% obsv_M = obsv(A,C);
% ctrb_M = ctrb(A,B);
% 
% %% Split system in 2 parts
% 
% A1 = A(1:2,1:2);
% B1 = B(1:2,1);
% C1 = C(1,1:2);
% D1 = 0;
% test_ss = ss(A1,B1,C1,D1);
% 
% %% LQR controler
% poles = [-0.5 , -0.5];
% K = -acker(A1,B1,poles);
% %% 
% L1 = acker(A1',C1',[-0.5;-0.5])';
% Aobs = A1-L1*C1;
% Bobs = [B1 L1];
% Cobs = eye(2);
% Dobs = zeros(2,2);


A = [0,1,0;
     0,0,1;
     24,14,-1];
B = [0;0;1];
C = [2,-1,1];
D = 0;
poles = [-5+5j -5-5j -10];
K = -acker(A,B,poles);
obspoles = [-20 -20 -20];
l = acker(A',C',obspoles);
L = l';
Aobs = A-L*C;
Bobs = [B L];
Cobs = eye(3);
Dobs = [0,0;
        0,0;
        0,0];
